apiVersion: v1
kind: Template
metadata:
  name: minio-backup
parameters:
  - name: NAME_SUFFIX
    required: true
  - name: NAMESPACE
    required: true
  - name: TOOLS_NAMESPACE
    required: true
  - name: DEST_PVC
    required: true
  - name: SCHEDULE
    value: "15 3 * * *"
    required: false
  - name: SOURCE_PVC
    required: true
objects:
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: epic-documents-${NAME_SUFFIX}-backup
      namespace: "${NAMESPACE}"
    spec:
      concurrencyPolicy: Forbid
      failedJobsHistoryLimit: 3
      jobTemplate:
        metadata:
          labels:
            app: "epic-${NAME_SUFFIX}"
            name: "epic-${NAME_SUFFIX}-documents-backup"
        spec:
          backoffLimit: 10
          template:
            spec:
              activeDeadlineSeconds: 18000
              containers:
              - image: docker-registry.default.svc:5000/${TOOLS_NAMESPACE}/epic-documents-backup
                imagePullPolicy: Always
                name: minio-backup
                env:
                  - name: RESTIC_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        key: RESTIC_PASSWORD
                        name: minio-restic-password-${NAME_SUFFIX}
                  - name: ROCKETCHAT_WEBHOOK
                    valueFrom:
                      secretKeyRef:
                        key: ROCKETCHAT_WEBHOOK
                        name: minio-rocketchat-webhook-${NAME_SUFFIX}
                resources:
                  limits:
                    cpu: 2
                    memory: 5Gi
                  requests:
                    cpu: 1
                    memory: 2Gi
                volumeMounts:
                - mountPath: /mnt/dest/
                  name: dest
                - mountPath: /mnt/source/
                  name: source
                  readOnly: true
              restartPolicy: OnFailure
              terminationGracePeriodSeconds: 30
              volumes:
              - name: source
                persistentVolumeClaim:
                  claimName: "${SOURCE_PVC}"
              - name: dest
                persistentVolumeClaim:
                  claimName: "${DEST_PVC}"
      schedule: ${SCHEDULE}
      successfulJobsHistoryLimit: 3
